{"ast":null,"code":"var _jsxFileName = \"/Users/priyakhandelwal/Desktop/projects/notes-app/notes-app/notes-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/api/notes\");\n        const notes = await response.json();\n        setNotes(notes);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchNotes();\n  }, []);\n  const handleAddNote = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:8080/api/notes\", {\n        method: 'POST',\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      const newNote = await response.json();\n      setNotes([newNote, ...notes]);\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleUpdateNote = async event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    const updatedNote = {\n      id: selectedNote.id,\n      title: title,\n      content: content\n    };\n    try {\n      const response = await fetch(`http://localhost:8080/api/notes/${selectedNote.id}`, {\n        method: 'PUT',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      const res = await response.json();\n      console.log(res);\n      const updatedNotesList = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n      setNotes(updatedNotesList);\n      setTitle(\"\");\n      setContent(\"\");\n      setSelectedNote(null);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const deletevent = async (event, noteId) => {\n    event.stopPropagation();\n    try {\n      await fetch(`http://localhost:8080/api/notes/${noteId}`, {\n        method: 'DELETE'\n      });\n      const updatedNotes = notes.filter(note => note.id !== noteId);\n      setNotes(updatedNotes);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: event => selectedNote ? handleUpdateNote(event) : handleAddNote(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        placeholder: \"content\",\n        onChange: event => setContent(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), \"rows=\", 10, selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => deletevent(e, note.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LIY9BSaRpbuEQidTFX1aHfaXfE4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","title","setTitle","content","setContent","selectedNote","setSelectedNote","notes","setNotes","fetchNotes","response","fetch","json","e","console","log","handleAddNote","preventDefault","method","headers","body","JSON","stringify","newNote","handleNoteClick","note","handleUpdateNote","event","updatedNote","id","res","updatedNotesList","map","handleCancel","deletevent","noteId","stopPropagation","updatedNotes","filter","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/priyakhandelwal/Desktop/projects/notes-app/notes-app/notes-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport './App.css';\n\ntype Note = {\n  id: number,\n  title: string,\n  content: string\n}\nconst App = () => {\n  const [title, setTitle] = useState<string>(\"\");\n  const [content, setContent] = useState<string>(\"\");\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n  const [notes, setNotes] = useState<Note[]>([]);\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try{\n        const response = await fetch(\"http://localhost:8080/api/notes\");\n        const notes:Note[] = await response.json();\n        setNotes(notes);\n      }\n      catch(e){\n        console.log(e);\n      }\n    }\n    fetchNotes();\n  }, [])\n\n  const handleAddNote = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:8080/api/notes\", {\n        method: 'POST',\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })});\n        const newNote = await response.json();\n        setNotes([newNote, ...notes]);\n        setTitle(\"\");\n        setContent(\"\");\n    }catch(e){\n      console.log(e)\n    }\n  }\n\n  const handleNoteClick = (note: Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n\n  const handleUpdateNote = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if(!selectedNote){\n      return;\n    }\n\n    const updatedNote = {\n      id: selectedNote.id,\n      title: title,\n      content: content\n    }\n    try{\n      const response = await fetch(`http://localhost:8080/api/notes/${selectedNote.id}`,\n      {\n        method: 'PUT',\n        headers: {'content-type': 'application/json'},\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      const res =  await response.json();\n      console.log(res)\n      const updatedNotesList = notes.map((note) => (note.id === selectedNote.id? updatedNote: note));\n      setNotes(updatedNotesList);\n      setTitle(\"\");\n      setContent(\"\");\n      setSelectedNote(null);\n    }\n    catch(e){\n      console.log(e)\n    }\n\n  }\n\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n\n  const deletevent = async (event: React.MouseEvent, noteId: number) => {\n    event.stopPropagation();\n    try {\n      await fetch(`http://localhost:8080/api/notes/${noteId}`, {\n        method: 'DELETE',\n      });\n      const updatedNotes = notes.filter((note) => note.id!==noteId);\n      setNotes(updatedNotes);\n    } catch(e){\n      console.log(e)\n    }\n  }\n  \n  return(\n    <div className='app-container'>\n      <form className='note-form' \n        onSubmit = {(event) => ( selectedNote? handleUpdateNote(event) : handleAddNote(event) )} >\n        <input \n        value = {title}\n        onChange = {(event) => setTitle(event.target.value)}\n        placeholder='Title' \n        required />\n        <textarea \n        value = {content}\n        placeholder=\"content\"\n        onChange = {(event) => setContent(event.target.value)}\n        required />\n        rows={10}\n        {selectedNote ? (\n          <div className=\"edit-buttons\">\n            <button type=\"submit\">Save</button>\n            <button onClick={handleCancel}>Cancel</button>\n          </div>\n        ) : (\n          <button type=\"submit\">Add Note</button>\n        )}\n      </form>\n      <div className=\"notes-grid\">\n        {notes.map((note) => (\n        <div className=\"note-item\" key={note.id} onClick={() => handleNoteClick(note)}>\n          <div className=\"notes-header\">\n            <button onClick={(e) => deletevent(e, note.id)}>x</button>\n          </div>\n            <h2>{note.title}</h2>\n            <p>{note.content}</p>\n        </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}